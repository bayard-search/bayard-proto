// This file is generated by rust-protobuf 2.8.0. Do not edit
// @generated

// https://github.com/Manishearth/rust-clippy/issues/702
#![allow(unknown_lints)]
#![allow(clippy::all)]

#![cfg_attr(rustfmt, rustfmt_skip)]

#![allow(box_pointers)]
#![allow(dead_code)]
#![allow(missing_docs)]
#![allow(non_camel_case_types)]
#![allow(non_snake_case)]
#![allow(non_upper_case_globals)]
#![allow(trivial_casts)]
#![allow(unsafe_code)]
#![allow(unused_imports)]
#![allow(unused_results)]
//! Generated file from `indexpb.proto`

use protobuf::Message as Message_imported_for_functions;
use protobuf::ProtobufEnum as ProtobufEnum_imported_for_functions;

/// Generated files are compatible only with the same version
/// of protobuf runtime.
const _PROTOBUF_VERSION_CHECK: () = ::protobuf::VERSION_2_8_0;

static file_descriptor_proto_data: &'static [u8] = b"\
    \n\rindexpb.proto\x12\x07indexpb\x1a\x10indexrpcpb.proto\x1a\reraftpb.pr\
    oto2\xfa\x06\n\x05Index\x120\n\x04Raft\x12\x10.eraftpb.Message\x1a\x14.i\
    ndexrpcpb.RaftDone\"\0\x12C\n\x0eRaftConfChange\x12\x19.indexrpcpb.ConfC\
    hangeReq\x1a\x14.indexrpcpb.RaftDone\"\0\x126\n\x05Probe\x12\x14.indexrp\
    cpb.ProbeReq\x1a\x15.indexrpcpb.ProbeResp\"\0\x126\n\x05Peers\x12\x14.in\
    dexrpcpb.PeersReq\x1a\x15.indexrpcpb.PeersResp\"\0\x12<\n\x07Metrics\x12\
    \x16.indexrpcpb.MetricsReq\x1a\x17.indexrpcpb.MetricsResp\"\0\x120\n\x03\
    Get\x12\x12.indexrpcpb.GetReq\x1a\x13.indexrpcpb.GetResp\"\0\x120\n\x03P\
    ut\x12\x12.indexrpcpb.PutReq\x1a\x13.indexrpcpb.PutResp\"\0\x129\n\x06De\
    lete\x12\x15.indexrpcpb.DeleteReq\x1a\x16.indexrpcpb.DeleteResp\"\0\x12<\
    \n\x07BulkPut\x12\x16.indexrpcpb.BulkPutReq\x1a\x17.indexrpcpb.BulkPutRe\
    sp\"\0\x12E\n\nBulkDelete\x12\x19.indexrpcpb.BulkDeleteReq\x1a\x1a.index\
    rpcpb.BulkDeleteResp\"\0\x129\n\x06Commit\x12\x15.indexrpcpb.CommitReq\
    \x1a\x16.indexrpcpb.CommitResp\"\0\x12?\n\x08Rollback\x12\x17.indexrpcpb\
    .RollbackReq\x1a\x18.indexrpcpb.RollbackResp\"\0\x126\n\x05Merge\x12\x14\
    .indexrpcpb.MergeReq\x1a\x15.indexrpcpb.MergeResp\"\0\x129\n\x06Search\
    \x12\x15.indexrpcpb.SearchReq\x1a\x16.indexrpcpb.SearchResp\"\0\x129\n\
    \x06Schema\x12\x15.indexrpcpb.SchemaReq\x1a\x16.indexrpcpb.SchemaResp\"\
    \0J\x92\x07\n\x06\x12\x04\0\0%\x01\n\x08\n\x01\x0c\x12\x03\0\0\x12\n\x08\
    \n\x01\x02\x12\x03\x01\0\x10\n\t\n\x02\x03\0\x12\x03\x03\0\x1a\n\t\n\x02\
    \x03\x01\x12\x03\x04\0\x17\n\n\n\x02\x06\0\x12\x04\x06\0%\x01\n\n\n\x03\
    \x06\0\x01\x12\x03\x06\x08\r\n\x0c\n\x04\x06\0\x02\0\x12\x04\x07\x04\x08\
    \x05\n\x0c\n\x05\x06\0\x02\0\x01\x12\x03\x07\x08\x0c\n\x0c\n\x05\x06\0\
    \x02\0\x02\x12\x03\x07\x0e\x1d\n\x0c\n\x05\x06\0\x02\0\x03\x12\x03\x07(;\
    \n\x0c\n\x04\x06\0\x02\x01\x12\x04\t\x04\n\x05\n\x0c\n\x05\x06\0\x02\x01\
    \x01\x12\x03\t\x08\x16\n\x0c\n\x05\x06\0\x02\x01\x02\x12\x03\t\x180\n\
    \x0c\n\x05\x06\0\x02\x01\x03\x12\x03\t;N\n\x0c\n\x04\x06\0\x02\x02\x12\
    \x04\x0b\x04\x0c\x05\n\x0c\n\x05\x06\0\x02\x02\x01\x12\x03\x0b\x08\r\n\
    \x0c\n\x05\x06\0\x02\x02\x02\x12\x03\x0b\x0f\"\n\x0c\n\x05\x06\0\x02\x02\
    \x03\x12\x03\x0b-A\n\x0c\n\x04\x06\0\x02\x03\x12\x04\r\x04\x0e\x05\n\x0c\
    \n\x05\x06\0\x02\x03\x01\x12\x03\r\x08\r\n\x0c\n\x05\x06\0\x02\x03\x02\
    \x12\x03\r\x0f\"\n\x0c\n\x05\x06\0\x02\x03\x03\x12\x03\r-A\n\x0c\n\x04\
    \x06\0\x02\x04\x12\x04\x0f\x04\x10\x05\n\x0c\n\x05\x06\0\x02\x04\x01\x12\
    \x03\x0f\x08\x0f\n\x0c\n\x05\x06\0\x02\x04\x02\x12\x03\x0f\x11&\n\x0c\n\
    \x05\x06\0\x02\x04\x03\x12\x03\x0f1G\n\x0c\n\x04\x06\0\x02\x05\x12\x04\
    \x11\x04\x12\x05\n\x0c\n\x05\x06\0\x02\x05\x01\x12\x03\x11\x08\x0b\n\x0c\
    \n\x05\x06\0\x02\x05\x02\x12\x03\x11\r\x1e\n\x0c\n\x05\x06\0\x02\x05\x03\
    \x12\x03\x11);\n\x0c\n\x04\x06\0\x02\x06\x12\x04\x13\x04\x14\x05\n\x0c\n\
    \x05\x06\0\x02\x06\x01\x12\x03\x13\x08\x0b\n\x0c\n\x05\x06\0\x02\x06\x02\
    \x12\x03\x13\r\x1e\n\x0c\n\x05\x06\0\x02\x06\x03\x12\x03\x13);\n\x0c\n\
    \x04\x06\0\x02\x07\x12\x04\x15\x04\x16\x05\n\x0c\n\x05\x06\0\x02\x07\x01\
    \x12\x03\x15\x08\x0e\n\x0c\n\x05\x06\0\x02\x07\x02\x12\x03\x15\x10$\n\
    \x0c\n\x05\x06\0\x02\x07\x03\x12\x03\x15/D\n\x0c\n\x04\x06\0\x02\x08\x12\
    \x04\x17\x04\x18\x05\n\x0c\n\x05\x06\0\x02\x08\x01\x12\x03\x17\x08\x0f\n\
    \x0c\n\x05\x06\0\x02\x08\x02\x12\x03\x17\x11&\n\x0c\n\x05\x06\0\x02\x08\
    \x03\x12\x03\x171G\n\x0c\n\x04\x06\0\x02\t\x12\x04\x19\x04\x1a\x05\n\x0c\
    \n\x05\x06\0\x02\t\x01\x12\x03\x19\x08\x12\n\x0c\n\x05\x06\0\x02\t\x02\
    \x12\x03\x19\x14,\n\x0c\n\x05\x06\0\x02\t\x03\x12\x03\x197P\n\x0c\n\x04\
    \x06\0\x02\n\x12\x04\x1b\x04\x1c\x05\n\x0c\n\x05\x06\0\x02\n\x01\x12\x03\
    \x1b\x08\x0e\n\x0c\n\x05\x06\0\x02\n\x02\x12\x03\x1b\x10$\n\x0c\n\x05\
    \x06\0\x02\n\x03\x12\x03\x1b/D\n\x0c\n\x04\x06\0\x02\x0b\x12\x04\x1d\x04\
    \x1e\x05\n\x0c\n\x05\x06\0\x02\x0b\x01\x12\x03\x1d\x08\x10\n\x0c\n\x05\
    \x06\0\x02\x0b\x02\x12\x03\x1d\x12(\n\x0c\n\x05\x06\0\x02\x0b\x03\x12\
    \x03\x1d3J\n\x0c\n\x04\x06\0\x02\x0c\x12\x04\x1f\x04\x20\x05\n\x0c\n\x05\
    \x06\0\x02\x0c\x01\x12\x03\x1f\x08\r\n\x0c\n\x05\x06\0\x02\x0c\x02\x12\
    \x03\x1f\x0f\"\n\x0c\n\x05\x06\0\x02\x0c\x03\x12\x03\x1f-A\n\x0c\n\x04\
    \x06\0\x02\r\x12\x04!\x04\"\x05\n\x0c\n\x05\x06\0\x02\r\x01\x12\x03!\x08\
    \x0e\n\x0c\n\x05\x06\0\x02\r\x02\x12\x03!\x10$\n\x0c\n\x05\x06\0\x02\r\
    \x03\x12\x03!/D\n\x0c\n\x04\x06\0\x02\x0e\x12\x04#\x04$\x05\n\x0c\n\x05\
    \x06\0\x02\x0e\x01\x12\x03#\x08\x0e\n\x0c\n\x05\x06\0\x02\x0e\x02\x12\
    \x03#\x10$\n\x0c\n\x05\x06\0\x02\x0e\x03\x12\x03#/Db\x06proto3\
";

static mut file_descriptor_proto_lazy: ::protobuf::lazy::Lazy<::protobuf::descriptor::FileDescriptorProto> = ::protobuf::lazy::Lazy {
    lock: ::protobuf::lazy::ONCE_INIT,
    ptr: 0 as *const ::protobuf::descriptor::FileDescriptorProto,
};

fn parse_descriptor_proto() -> ::protobuf::descriptor::FileDescriptorProto {
    ::protobuf::parse_from_bytes(file_descriptor_proto_data).unwrap()
}

pub fn file_descriptor_proto() -> &'static ::protobuf::descriptor::FileDescriptorProto {
    unsafe {
        file_descriptor_proto_lazy.get(|| {
            parse_descriptor_proto()
        })
    }
}
