// This file is generated by rust-protobuf 2.8.2. Do not edit
// @generated

// https://github.com/Manishearth/rust-clippy/issues/702
#![allow(unknown_lints)]
#![allow(clippy::all)]

#![cfg_attr(rustfmt, rustfmt_skip)]

#![allow(box_pointers)]
#![allow(dead_code)]
#![allow(missing_docs)]
#![allow(non_camel_case_types)]
#![allow(non_snake_case)]
#![allow(non_upper_case_globals)]
#![allow(trivial_casts)]
#![allow(unsafe_code)]
#![allow(unused_imports)]
#![allow(unused_results)]
//! Generated file from `indexpb.proto`

use protobuf::Message as Message_imported_for_functions;
use protobuf::ProtobufEnum as ProtobufEnum_imported_for_functions;

/// Generated files are compatible only with the same version
/// of protobuf runtime.
const _PROTOBUF_VERSION_CHECK: () = ::protobuf::VERSION_2_8_2;

static file_descriptor_proto_data: &'static [u8] = b"\
    \n\rindexpb.proto\x12\x07indexpb\x1a\x10indexrpcpb.proto\x1a\reraftpb.pr\
    oto2\xfa\x06\n\x05Index\x120\n\x04Raft\x12\x10.eraftpb.Message\x1a\x14.i\
    ndexrpcpb.RaftDone\"\0\x12C\n\x0eRaftConfChange\x12\x19.indexrpcpb.ConfC\
    hangeReq\x1a\x14.indexrpcpb.RaftDone\"\0\x126\n\x05Probe\x12\x14.indexrp\
    cpb.ProbeReq\x1a\x15.indexrpcpb.ProbeResp\"\0\x126\n\x05Peers\x12\x14.in\
    dexrpcpb.PeersReq\x1a\x15.indexrpcpb.PeersResp\"\0\x12<\n\x07Metrics\x12\
    \x16.indexrpcpb.MetricsReq\x1a\x17.indexrpcpb.MetricsResp\"\0\x120\n\x03\
    Get\x12\x12.indexrpcpb.GetReq\x1a\x13.indexrpcpb.GetResp\"\0\x120\n\x03P\
    ut\x12\x12.indexrpcpb.PutReq\x1a\x13.indexrpcpb.PutResp\"\0\x129\n\x06De\
    lete\x12\x15.indexrpcpb.DeleteReq\x1a\x16.indexrpcpb.DeleteResp\"\0\x12<\
    \n\x07BulkPut\x12\x16.indexrpcpb.BulkPutReq\x1a\x17.indexrpcpb.BulkPutRe\
    sp\"\0\x12E\n\nBulkDelete\x12\x19.indexrpcpb.BulkDeleteReq\x1a\x1a.index\
    rpcpb.BulkDeleteResp\"\0\x129\n\x06Commit\x12\x15.indexrpcpb.CommitReq\
    \x1a\x16.indexrpcpb.CommitResp\"\0\x12?\n\x08Rollback\x12\x17.indexrpcpb\
    .RollbackReq\x1a\x18.indexrpcpb.RollbackResp\"\0\x126\n\x05Merge\x12\x14\
    .indexrpcpb.MergeReq\x1a\x15.indexrpcpb.MergeResp\"\0\x129\n\x06Search\
    \x12\x15.indexrpcpb.SearchReq\x1a\x16.indexrpcpb.SearchResp\"\0\x129\n\
    \x06Schema\x12\x15.indexrpcpb.SchemaReq\x1a\x16.indexrpcpb.SchemaResp\"\
    \0b\x06proto3\
";

static mut file_descriptor_proto_lazy: ::protobuf::lazy::Lazy<::protobuf::descriptor::FileDescriptorProto> = ::protobuf::lazy::Lazy {
    lock: ::protobuf::lazy::ONCE_INIT,
    ptr: 0 as *const ::protobuf::descriptor::FileDescriptorProto,
};

fn parse_descriptor_proto() -> ::protobuf::descriptor::FileDescriptorProto {
    ::protobuf::parse_from_bytes(file_descriptor_proto_data).unwrap()
}

pub fn file_descriptor_proto() -> &'static ::protobuf::descriptor::FileDescriptorProto {
    unsafe {
        file_descriptor_proto_lazy.get(|| {
            parse_descriptor_proto()
        })
    }
}
