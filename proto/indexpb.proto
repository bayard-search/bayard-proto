syntax = "proto3";

import "commonpb.proto";

package bayard.index;

option go_package = "pkg/proto";

service IndexService {
    rpc Get(GetReq) returns (GetReply) {}
    rpc Search (SearchReq) returns (SearchReply) {}
    rpc Set(SetReq) returns (SetReply) {}
    rpc Delete(DeleteReq) returns (DeleteReply) {}
    rpc BulkSet (BulkSetReq) returns (BulkSetReply) {}
    rpc BulkDelete (BulkDeleteReq) returns (BulkDeleteReply) {}
    rpc Commit (CommitReq) returns (CommitReply) {}
    rpc Rollback (RollbackReq) returns (RollbackReply) {}
    rpc Merge (MergeReq) returns (MergeReply) {}
    rpc Schema (SchemaReq) returns (SchemaReply) {}
    rpc Metrics (MetricsReq) returns (MetricsReply) {}
    rpc Status (StatusReq) returns (StatusReply) {}
}

message SearchReq {
    string query = 1;
    uint64 from = 2;
    uint64 limit = 3;
    bool exclude_count = 4;
    bool exclude_docs = 5;
    string facet_field = 6;
    repeated string facet_prefixes = 7;
    uint64 client_id = 8;
}

message SearchReply {
    bayard.common.State state = 1;
    string search_result = 2;
    bytes address_map = 3;
    uint64 leader_id = 4;
}

message GetReq {
    string id = 1;
    uint64 client_id = 2;
}

message GetReply {
    bayard.common.State state = 1;
    string doc = 2;
    bytes address_map = 3;
    uint64 leader_id = 4;
}

message SetReq {
    string doc = 1;
    uint64 client_id = 2;
}

message SetReply {
    bayard.common.State state = 1;
    bytes address_map = 2;
    uint64 leader_id = 3;
}

message DeleteReq {
    string id = 1;
    uint64 client_id = 2;
}

message DeleteReply {
    bayard.common.State state = 1;
    bytes address_map = 2;
    uint64 leader_id = 3;
}

message BulkSetReq {
    string docs = 1;
    uint64 client_id = 2;
}

message BulkSetReply {
    bayard.common.State state = 1;
    bytes address_map = 2;
    uint64 leader_id = 3;
}

message BulkDeleteReq {
    string docs = 1;
    uint64 client_id = 2;
}

message BulkDeleteReply {
    bayard.common.State state = 1;
    bytes address_map = 2;
    uint64 leader_id = 3;
}

message CommitReq {
    uint64 client_id = 1;
}

message CommitReply {
    bayard.common.State state = 1;
    bytes address_map = 2;
    uint64 leader_id = 3;
}

message RollbackReq {
    uint64 client_id = 1;
}

message RollbackReply {
    bayard.common.State state = 1;
    bytes address_map = 2;
    uint64 leader_id = 3;
}

message MergeReq {
    uint64 client_id = 1;
}

message MergeReply {
    bayard.common.State state = 1;
    bytes address_map = 2;
    uint64 leader_id = 3;
}

message SchemaReq {
    uint64 client_id = 1;
    uint64 seq = 2;
}

message SchemaReply {
    bayard.common.State state = 1;
    string schema = 2;
    bytes address_map = 3;
    uint64 leader_id = 4;
}

message MetricsReq {
    uint64 client_id = 1;
}

message MetricsReply {
    bayard.common.State state = 1;
    string metrics = 2;
    bytes address_map = 3;
    uint64 leader_id = 4;
}

message StatusReq {
    uint64 client_id = 1;
}

message StatusReply {
    bayard.common.State state = 1;
    string status = 2;
    bytes address_map = 3;
    uint64 leader_id = 4;
}
